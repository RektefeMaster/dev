import { device, element, by, expect as detoxExpect, waitFor } from 'detox';

describe('ğŸ‘‹ Onboarding ve Ä°lk KullanÄ±m', () => {
  beforeAll(async () => {
    });

  beforeEach(async () => {
    // Her testten Ã¶nce uygulamayÄ± temiz baÅŸlat
    await device.reloadReactNative();
  });

  it('Splash screen doÄŸru ÅŸekilde gÃ¶rÃ¼ntÃ¼leniyor', async () => {
    // Splash screen'in gÃ¶rÃ¼nÃ¼r olduÄŸunu kontrol et
    await waitFor(element(by.testID('splash-screen')))
      .toBeVisible()
      .withTimeout(5000);
    
    await global.helpers.takeScreenshot('splash_screen');
    
    // Lottie animasyonunun Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ± kontrol et
    await detoxExpect(element(by.testID('splash-lottie-animation'))).toBeVisible();
    
    });

  it('Onboarding slide\'larÄ± doÄŸru sÄ±rayla gÃ¶steriliyor', async () => {
    await global.helpers.skipSplashScreen();
    
    // Ä°lk slide kontrolÃ¼
    await detoxExpect(element(by.testID('onboarding-slide-0'))).toBeVisible();
    await detoxExpect(element(by.text('Rektefe\'ye HoÅŸ Geldiniz!'))).toBeVisible();
    await global.helpers.takeScreenshot('onboarding_slide_1');
    
    // Ä°kinci slide'a geÃ§
    await element(by.testID('onboarding-next-button')).tap();
    await detoxExpect(element(by.testID('onboarding-slide-1'))).toBeVisible();
    await global.helpers.takeScreenshot('onboarding_slide_2');
    
    // ÃœÃ§Ã¼ncÃ¼ slide'a geÃ§
    await element(by.testID('onboarding-next-button')).tap();
    await detoxExpected(element(by.testID('onboarding-slide-2'))).toBeVisible();
    await global.helpers.takeScreenshot('onboarding_slide_3');
    
    // "BaÅŸlayalÄ±m" butonu gÃ¶rÃ¼nÃ¼r olmalÄ±
    await detoxExpect(element(by.testID('onboarding-start-button'))).toBeVisible();
    
    });

  it('Onboarding\'den auth ekranÄ±na geÃ§iÅŸ yapÄ±lÄ±yor', async () => {
    await global.helpers.skipSplashScreen();
    await global.helpers.skipOnboarding();
    
    // Auth ekranÄ±nÄ±n gÃ¶rÃ¼nÃ¼r olduÄŸunu kontrol et
    await waitFor(element(by.testID('auth-screen')))
      .toBeVisible()
      .withTimeout(5000);
    
    await global.helpers.takeScreenshot('auth_screen_after_onboarding');
    
    // Login ve Register sekmelerinin var olduÄŸunu kontrol et
    await detoxExpect(element(by.testID('login-tab'))).toBeVisible();
    await detoxExpect(element(by.testID('register-tab'))).toBeVisible();
    
    });

  it('Geri butonu ile onboarding\'de gezinebiliyor', async () => {
    await global.helpers.skipSplashScreen();
    
    // Ä°kinci slide'a git
    await element(by.testID('onboarding-next-button')).tap();
    await element(by.testID('onboarding-next-button')).tap();
    
    // Geri butonunun gÃ¶rÃ¼nÃ¼r olduÄŸunu kontrol et (ilk slide'da olmamalÄ±)
    await detoxExpect(element(by.testID('onboarding-back-button'))).toBeVisible();
    
    // Geri git
    await element(by.testID('onboarding-back-button')).tap();
    await detoxExpect(element(by.testID('onboarding-slide-1'))).toBeVisible();
    
    // Bir daha geri git
    await element(by.testID('onboarding-back-button')).tap();
    await detoxExpect(element(by.testID('onboarding-slide-0'))).toBeVisible();
    
    });

  it('Skip butonu ile onboarding atlanabiliyor', async () => {
    await global.helpers.skipSplashScreen();
    
    // Skip butonuna tÄ±kla
    await element(by.testID('onboarding-skip-button')).tap();
    
    // Direkt auth ekranÄ±na gittiÄŸini kontrol et
    await waitFor(element(by.testID('auth-screen')))
      .toBeVisible()
      .withTimeout(3000);
    
    await global.helpers.takeScreenshot('auth_screen_after_skip');
    
    });

  it('Onboarding tamamlandÄ±ktan sonra tekrar gÃ¶sterilmiyor', async () => {
    // Ä°lk kez onboarding'i tamamla
    await global.helpers.skipSplashScreen();
    await global.helpers.skipOnboarding();
    
    // UygulamayÄ± yeniden baÅŸlat
    await device.reloadReactNative();
    await global.helpers.skipSplashScreen();
    
    // Auth ekranÄ±nÄ±n direkt gÃ¶rÃ¼ndÃ¼ÄŸÃ¼nÃ¼ kontrol et (onboarding olmamalÄ±)
    await waitFor(element(by.testID('auth-screen')))
      .toBeVisible()
      .withTimeout(5000);
    
    // Onboarding ekranÄ±nÄ±n olmadÄ±ÄŸÄ±nÄ± kontrol et
    try {
      await waitFor(element(by.testID('onboarding-screen')))
        .toBeVisible()
        .withTimeout(1000);
      throw new Error('Onboarding ekranÄ± tekrar gÃ¶sterildi!');
    } catch (error) {
      if (error.message.includes('tekrar gÃ¶sterildi')) {
        throw error;
      }
      // Expected behavior - onboarding gÃ¶sterilmemeli
    }
    
    });
});
